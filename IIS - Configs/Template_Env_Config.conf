

REM ***** CONSTANTES *****
set curPath=%~dp0
set initialPath=%CD%
set IISConfigPath="IIS - Configs"
set poolFile=apppool.xml
set siteFile=website.xml
REM set PathFile=MyPath.txt
set webConfig=web.config
set PythonInstaller=%temp%\python_installer.exe
REM ***** CONSTANTES *****

TITLE Configuration IIS local pour le site "%siteName%%appName%" ("%poolName%")

cd %curPath%
%curPath:~0,2%

cd %IISConfigPath%
set IISConfigPath=%CD%
cd %curPath%

REM echo %path%>%PathFile%
cls

GOTO IIS_NOT_INSTALLED

GOTO PYTHON_KNOWN

for /f %%i in ("%exeFastCGI%") do (
    if not exist "%%~dp$PATH:i" (
        goto SEARCH_PYTHON
    ) else (
        set "exeFastCGIPath=%%~dp$PATH:i"		
		goto PYTHON_KNOWN
    )
)    


:PYTHON_KNOWN
if not exist "%IISConfigPath%" GOTO XML_NOT_EXISTS

if "%appName%" EQU "" (
	GOTO SITE_EXISTS
) else (
	GOTO APP_EXISTS
) 

:ACCUEIL
REM Ce script doit etre execute en administrateur
net session >nul 2>&1
if %errorLevel% GTR 0 (
	echo /!\ LANCEMENT MODE ADMIN necessaire /!\ 
	pause
	GOTO END
) 
echo Vous allez lancer la configuration de votre IIS local pour le site "%siteName%%appName%" 
echo et le pool d'application "%poolName%".
echo Les configurations existantes ne seront pas ajoutees ni modifiees.
echo .
GOTO GET_PASSWORD


:GET_PASSWORD
echo Saisissez vos identifiants Windows
echo Login   : %USERDOMAIN%\%username%
for /f "delims=" %%a in ('powershell -c "$rep=read-host Password -AsSecureString;$password = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($rep));write $password"') do set userPassword=%%a
rem powershell -c "$userPassword=read-host "Password " -AsSecureString;$password = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($userPassword));"
if "%userPassword%" NEQ "" (GOTO INSTALL_PYTHON) else (GOTO GET_PASSWORD)
pause

:INSTALL
if not exist "C:\inetpub\Virtual_DevPath_IIS" md C:\inetpub\Virtual_DevPath_IIS

%windir%\system32\inetsrv\appcmd list vdir|findstr /C:"Default Web Site/Dev"
if %errorlevel%==1 %windir%\system32\inetsrv\appcmd add vdir /app.name:"Default Web Site/" /path:/Dev /physicalPath:C:\inetpub\Virtual_DevPath_IIS

echo creation des liens symboliques
if exist CreateSymbolicLink.conf (
rename CreateSymbolicLink.conf CreateSymbolicLink.bat
call CreateSymbolicLink.bat
rename CreateSymbolicLink.bat CreateSymbolicLink.conf
)
ECHO Recuperation des templates de configuration
copy "%IISConfigPath%\%poolFile%" %curPath%
copy "%IISConfigPath%\%siteFile%" %curPath%
copy "%IISConfigPath%\%webConfig%" %curPath%
if exist "%IISConfigPath%\Publish To Test.conf" (
echo Creation du batch de publication
rename "%IISConfigPath%\Publish To Test.conf" "Publish To Test.bat"
copy "%IISConfigPath%\Publish To Test.bat" "%curPath%"
rename "%IISConfigPath%\Publish To Test.bat" "Publish To Test.conf"
)

ECHO Initialisation de la configuration de %poolFile% pour %poolName%
powershell -Command "(gc %poolFile%) -replace '##ProjectPath##', '%ProjectPath%' | Out-File -encoding UTF8 %poolFile%"
powershell -Command "(gc %poolFile%) -replace '##USERNAME##', '%username%' | Out-File -encoding UTF8 %poolFile%"
powershell -Command "(gc %poolFile%) -replace '##PASSWORD##', '%userPassword%' | Out-File -encoding UTF8 %poolFile%"
powershell -Command "(gc %poolFile%) -replace '##SCRIPT_NAME##', '%SCRIPT_NAME%' | Out-File -encoding UTF8 %poolFile%"
powershell -Command "(gc %poolFile%) -replace '##poolName##', '%poolName%' | Out-File -encoding UTF8 %poolFile%"
powershell -Command "(gc %poolFile%) -replace '##USERDOMAIN##', '%USERDOMAIN%' | Out-File -encoding UTF8 %poolFile%"

ECHO Initialisation de la configuration de %siteFile% pour %siteName%%appName%
powershell -Command "(gc %siteFile%) -replace '##ProjectPath##', '%ProjectPath%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##USERNAME##', '%username%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##SCRIPT_NAME##', '%SCRIPT_NAME%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##WSGI_HANDLER##', '%WSGI_HANDLER%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##PYTHON_PATH##', '%WSGI_HANDLER%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##poolName##', '%poolName%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##appName##', '%appName%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##SiteName##', '%SiteName%' | Out-File -encoding UTF8 %siteFile%"
powershell -Command "(gc %siteFile%) -replace '##DJANGO_SETTINGS_MODULE##', '%DJANGO_SETTINGS_MODULE%' | Out-File -encoding UTF8 %siteFile%"

echo Suppresion du "%webConfig%" existant.
if exist "%ProjectPath%\%webConfig%.old" erase "%ProjectPath%\%webConfig%.old"
if exist "%ProjectPath%\%webConfig%" rename "%ProjectPath%\%webConfig%" "%webConfig%.old"

%windir%\system32\inetsrv\appcmd list apppool|findstr "%poolName%"
if %errorlevel%==1 (
echo Ajout du pool d'application "%poolName%" dans IIS
%windir%\system32\inetsrv\appcmd add apppool /NAME:"%poolName%" /in<%poolFile%
) else (
echo Pool d'application "%poolName%" deja existants dans IIS
)
set poolFail=%errorlevel%

if "%appName%"=="/" (
	echo Ajout du site "%siteName%%appName%" dans IIS
	%windir%\system32\inetsrv\appcmd add site /name:"%siteName%" /in<%siteFile%
	set siteFail=%errorlevel%	
) else (
	echo Ajout de l'application "%appName%" du site "%siteName%" dans IIS
	%windir%\system32\inetsrv\appcmd add app /SITE.NAME:"%siteName%" /path:%appName% /physicalPath:"%ProjectPath%"
	set siteFail=%errorlevel%	
)

if exist "%PYTHON_PATH%\%exeFastCGI%" set exeFastCGIPath=%PYTHON_PATH%\

echo installation des librairies requises pour ce projet
if exist "%IISConfigPath%\requirements.txt" "%PYTHON_PATH%\scripts\pip.exe" install -r "%IISConfigPath%\requirements.txt"

ECHO Initialisation de la configuration de %webConfig% pour %siteName%%appName%
powershell -Command "(gc %webConfig%) -replace '##ProjectPath##', '%ProjectPath%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##USERNAME##', '%username%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##SCRIPT_NAME##', '%SCRIPT_NAME%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##WSGI_HANDLER##', '%WSGI_HANDLER%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##PYTHON_PATH##', '%PYTHON_PATH%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##exeFastCGIPath##', '%exeFastCGIPath%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##exeFastCGI##', '%exeFastCGI%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##poolName##', '%poolName%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##DJANGO_SETTINGS_MODULE##', '%DJANGO_SETTINGS_MODULE%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"
powershell -Command "(gc %ProjectPath%\%webConfig%) -replace '##wfastcgiFile##', '%wfastcgiFile%' | Out-File -encoding UTF8 %ProjectPath%\%webConfig%"

if %siteFail%==0 (
%windir%\system32\inetsrv\appcmd set app "%siteName%%appName%" /applicationPool:%poolName%
%windir%\system32\inetsrv\appcmd set config -section:"system.webServer/fastCgi" /+"[fullpath='%exeFastCGIPath%%exeFastCGI%',arguments='%wfastcgiFile%',maxInstances='1']" /commit:apphost
)

echo Configuration de l'environnement Virtuel Python
if exist "%projectPath%\Lib\orig-prefix.txt" echo %projectPath%>"%projectPath%\Lib\orig-prefix.txt"

goto ADD_HOSTS_ALIAS

:ADD_HOSTS_ALIAS
cd %windir%\system32\Drivers\etc\
%windir:~0,2%
for /F "skip=17 tokens=1,* delims=," %%i IN (hosts) DO (
	if "%%i"=="127.0.0.1 %siteName%" (
		echo Alias du site deja present dans le fichier "Hosts" local
		goto APPLY_RIGHTS
	)	
)
echo Ajout de l'alias du site dans le fichier "Hosts" local
echo 127.0.0.1 %siteName%>>hosts
goto APPLY_RIGHTS

:APPLY_RIGHTS
ECHO Ajout des droits NTFS necessaire a IIS
rem icacls . /grant "NT AUTHORITY\IUSR:(OI)(CI)(RX)"
REM icacls . /grant "Builtin\IIS_IUSRS:(OI)(CI)(RX)"

goto END

:SEARCH_PYTHON
echo "%exeFastCGI%" not found in "PATH".
if exist %PythonInstaller% (goto INSTALL_PYTHON) else (goto END)

:INSTALL_PYTHON
if exist %PYTHON_PATH%\%exeFastCGI% GOTO INSTALL_REWRITE_URL
for %%a in (%PythonInstaller%) do set $Fichier=%%~na
echo Telechargement de python
curl -o %PythonInstaller% %PythonInstallerUrl%
echo Installation de %$Fichier%
if "%PythonInstaller:~-4,4%"==.msi (msiexec /i "%PythonInstaller%" %PythonInstallArguments%) else ("%PythonInstaller%" %PythonInstallArguments%)
if not exist "%PYTHON_PATH%\%exeFastCGI%" goto END
set PYTHON_PATH=%PYTHON_PATH%
GOTO INSTALL_REWRITE_URL

:XML_NOT_EXISTS
echo Le repertoire ou les fichiers XML de configurations IIS ne sont pas presents sur le poste (cf: SVN).
goto END

:IIS_NOT_INSTALLED
for /f "delims=" %%a in ('powershell -c "$rep=Get-WindowsOptionalFeature -Online | where {$_.state -eq 'Enabled'} | where FeatureName -ilike 'IIS-Webserver' | ft -Property featurename;write $rep"') do set iisResult=%%a
if "%iisResult%" NEQ "" goto PYTHON_KNOWN
REM if exist "%windir%\system32\inetsrv\appcmd.exe" goto PYTHON_KNOWN
echo Installation du service IIS local
PowerShell -NoProfile -ExecutionPolicy Bypass -File "%IISConfigPath%\Enable_Local_IIS.ps1"
if exist "%windir%\system32\inetsrv\appcmd.exe" goto PYTHON_KNOWN

echo IIS semble ne pas etre installe correctement.
goto END

:INSTALL_REWRITE_URL
if exist "%windir%\System32\inetsrv\rewrite.dll" GOTO INSTALL
tasklist|findstr InetMgr.exe
if "%errorlevel%"=="0" taskkill /F /IM InetMgr.exe
echo Telechargement du module Rewrite URL
curl -o "%temp%\rewrite_amd64_fr-FR.msi" "https://download.microsoft.com/download/1/2/8/128E2E22-C1B9-44A4-BE2A-5859ED1D4592/rewrite_amd64_fr-FR.msi"
echo Installation du module IIS "Rewrite URL"
msiexec /i "%temp%\rewrite_amd64_fr-FR.msi"  /passive /norestart
GOTO INSTALL

:END
cd %curPath%
%curPath:~0,2%

if exist "%webConfig%" erase "%webConfig%"

if %poolFail%==0 erase "%poolFile%"
if %siteFail%==0 (
REM echo "%siteFile%"
if exist "%siteFile%" erase "%siteFile%"
echo Ouverture du lien "%httpLink%"
explorer %httpLink%	
)

REM echo poolFail=%poolFail%
if %poolFail%==183 (
if exist "%poolFile%" erase "%poolFile%"
)

REM echo siteFail=%siteFail%
if %siteFail%==183 (
if exist "%siteFile%" erase "%siteFile%"
)

tasklist|findstr InetMgr.exe
if "%errorlevel%"=="1" (
echo Ouverture du Gestionnaire IIS
start "" /b %windir%\system32\inetsrv\InetMgr.exe
)

cd "%initialPath%"
%initialPath:~0,2%
echo fin de la configuration.

REM echo /!\ PENSEZ A RESSAISIR VOTRE MOT DE PASSE DANS LE POOL D'APPLICATION %poolName%
GOTO FINISHED

:APP_EXISTS
%windir%\system32\inetsrv\appcmd list app|findstr /C:"%siteName%%appName%"
	if %errorlevel%==1 (		
		GOTO ACCUEIL
	) else (
		echo Site "%siteName%%appName%" deja existants dans IIS
		set siteFail=183
		set poolFail=1
		GOTO END
	)
	
:SITE_EXISTS
%windir%\system32\inetsrv\appcmd list site|findstr /C:"%siteName%%appName%"
	if %errorlevel% NEQ 0 (	
		GOTO ACCUEIL
	) else (
		echo Site "%siteName%%appName%" deja existants dans IIS
		set siteFail=183			
		set poolFail=1
		GOTO END		
	)
	
:eof
endlocal
	
:FINISHED
